{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Description.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Description.vue","mtime":1601934218213},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIHJlZiwgY29tcHV0ZWQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaScKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBwcm9wczogewogICAgaW5pdGlhbFZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICB1cGRhdGV3b3Jrb3JkZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBzZXR1cChwcm9wcykgewogICAgY29uc3QgbW9kZSA9IHJlZjxzdHJpbmc+KCdyZWFkJykKICAgIGNvbnN0IGlzV29ya2luZyA9IHJlZjxib29sZWFuPihmYWxzZSkKICAgIGNvbnN0IGVkaXRvciA9IHJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCkKCiAgICBjb25zdCByZWFkT25seSA9IGNvbXB1dGVkKCgpID0+IG1vZGUudmFsdWUgPT0gJ3JlYWQnKQoKICAgIGNvbnN0IGhhbmRsZU1vZGVDaGFuZ2UgPSAobTogc3RyaW5nKSA9PiAobW9kZS52YWx1ZSA9IG0pCgogICAgY29uc3QgY2FuY2VsV3JpdGUgPSAoKSA9PiB7CiAgICAgIGhhbmRsZU1vZGVDaGFuZ2UoJ3JlYWQnKQogICAgfQoKICAgIGNvbnN0IHVwZGF0ZXdvcmtvcmRlckRlc2NyaXB0aW9uID0gYXN5bmMgKCkgPT4gewogICAgICB0cnkgewogICAgICAgIGlzV29ya2luZy52YWx1ZSA9IHRydWUKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueQogICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gKGVkaXRvci52YWx1ZSBhcyBhbnkpLmdldEhUTUxWYWx1ZSgpCiAgICAgICAgYXdhaXQgcHJvcHMudXBkYXRld29ya29yZGVyKHsgZGVzY3JpcHRpb24gfSkKICAgICAgICBpc1dvcmtpbmcudmFsdWUgPSBmYWxzZQogICAgICAgIGhhbmRsZU1vZGVDaGFuZ2UoJ3JlYWQnKQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gewogICAgICBtb2RlLAogICAgICByZWFkT25seSwKICAgICAgZWRpdG9yLAogICAgICBpc1dvcmtpbmcsCiAgICAgIGNhbmNlbFdyaXRlLAogICAgICBoYW5kbGVNb2RlQ2hhbmdlLAogICAgICB1cGRhdGV3b3Jrb3JkZXJEZXNjcmlwdGlvbgogICAgfQogIH0KfSkK"},{"version":3,"sources":["Description.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Description.vue","sourceRoot":"src/components/Project/Workorder/WorkorderDetails","sourcesContent":["<template>\n  <div>\n    <div class=\"pt-5 pb-2 text-15 text-textDarkest\">Description</div>\n    <j-text-editor\n      @changeMode=\"handleModeChange\"\n      :mode=\"mode\"\n      :value=\"initialValue\"\n      ref=\"editor\"\n      placeholder=\"Describe the workorder\"\n    />\n    <div v-if=\"!readOnly\" class=\"pt-3 flex items-center\">\n      <j-button\n        :isWorking=\"isWorking\"\n        @click=\"updateworkorderDescription\"\n        variant=\"primary\"\n        class=\"mr-2\"\n      >\n        Save</j-button\n      ><j-button @click=\"cancelWrite\" variant=\"empty\">\n        Cancel\n      </j-button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from '@vue/composition-api'\nexport default defineComponent({\n  props: {\n    initialValue: {\n      type: String,\n      default: ''\n    },\n    updateworkorder: {\n      type: Function,\n      required: true\n    }\n  },\n  setup(props) {\n    const mode = ref<string>('read')\n    const isWorking = ref<boolean>(false)\n    const editor = ref<HTMLDivElement>(null)\n\n    const readOnly = computed(() => mode.value == 'read')\n\n    const handleModeChange = (m: string) => (mode.value = m)\n\n    const cancelWrite = () => {\n      handleModeChange('read')\n    }\n\n    const updateworkorderDescription = async () => {\n      try {\n        isWorking.value = true\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const description = (editor.value as any).getHTMLValue()\n        await props.updateworkorder({ description })\n        isWorking.value = false\n        handleModeChange('read')\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    return {\n      mode,\n      readOnly,\n      editor,\n      isWorking,\n      cancelWrite,\n      handleModeChange,\n      updateworkorderDescription\n    }\n  }\n})\n</script>\n\n<style></style>\n"]}]}