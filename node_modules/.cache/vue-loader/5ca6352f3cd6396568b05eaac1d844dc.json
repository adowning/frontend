{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/shared/Button/Button.vue?vue&type=style&index=1&id=dacdebd6&lang=scss&scoped=true&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/shared/Button/Button.vue","mtime":1601932087349},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnByaW1hcnksCi5zdWNjZXNzLAouZGFuZ2VyLAouaW5mbywKLndhcm5pbmcgewogIGNvbG9yOiB3aGl0ZTsKICBmb250LXdlaWdodDogNTAwOwogIGJhY2tncm91bmQ6IHZhcigtLWJnLXZhcmlhbnQpOwogICY6bm90KDpkaXNhYmxlZCkgewogICAgJjpob3ZlciB7CiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWJnLXZhcmlhbnQtbGlnaHQpOwogICAgfQogICAgJjphY3RpdmUgewogICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1iZy12YXJpYW50LWRhcmspOwogICAgfQogICAgJi5hY3RpdmUgewogICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1iZy12YXJpYW50LWRhcmspICFpbXBvcnRhbnQ7CiAgICB9CiAgfQogICY6Zm9jdXMsCiAgJjphY3RpdmUgewogICAgb3V0bGluZTogbm9uZTsKICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCB2YXIoLS1iZy12YXJpYW50KTsKICB9Cn0KCi5zZWNvbmRhcnkgewogIGJhY2tncm91bmQ6IHZhcigtLWJnLXZhcmlhbnQpOwp9Ci5lbXB0eSB7CiAgYmFja2dyb3VuZDogd2hpdGU7CiAgb3V0bGluZTogbm9uZTsKICAmOmZvY3VzLAogICY6YWN0aXZlIHsKICAgIG91dGxpbmU6IG5vbmU7CiAgfQp9Cg=="},{"version":3,"sources":["Button.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Button.vue","sourceRoot":"src/components/shared/Button","sourcesContent":["<template>\n  <button\n    type=\"button\"\n    v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n    :class=\"[variant, { iconOnly: !$slots.default }, { isActive }]\"\n    class=\"button\"\n    :disabled=\"disabled\"\n    :style=\"getButtonStyles\"\n  >\n    <j-icon\n      v-if=\"isWorking\"\n      :size=\"iconSize\"\n      name=\"spin\"\n      class=\"spinner\"\n    ></j-icon>\n    <j-icon v-if=\"!isWorking && icon\" :size=\"iconSize\" :name=\"icon\"></j-icon>\n\n    <div v-if=\"$slots.default\" :class=\"{ withPadding: isWorking || icon }\">\n      <slot />\n    </div>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from '@vue/composition-api'\nimport { buttonVariants, tuneColor } from '@/utils/colors'\n\ntype variantType = 'primary' | 'secondary' | 'success' | 'danger' | 'warning'\n\nexport default defineComponent({\n  name: 'j-button',\n  props: {\n    className: {\n      type: String,\n      default: undefined\n    },\n    variant: {\n      type: String as () => variantType,\n      default: 'primary'\n    },\n    icon: {\n      type: String,\n      default: undefined\n    },\n    iconSize: {\n      type: Number,\n      default: 18\n    },\n    disabled: {\n      tpye: Boolean,\n      default: false\n    },\n    isWorking: {\n      tpye: Boolean,\n      default: false\n    },\n    isActive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const getButtonStyles = computed(() => {\n      const color = buttonVariants[props.variant as variantType]\n      return {\n        '--bg-variant': color,\n        '--bg-variant-dark': tuneColor.darken(color, 0.1),\n        '--bg-variant-light': tuneColor.lighten(color, 0.15),\n        '--primary': buttonVariants['primary']\n      }\n    })\n\n    return {\n      getButtonStyles\n    }\n  }\n})\n</script>\n\n<style lang=\"postcss\" scoped>\n.button {\n  @apply inline-flex items-center justify-center h-8 align-middle leading-none whitespace-no-wrap rounded-sm transition-all duration-100 appearance-none cursor-pointer select-none px-3;\n  font-size: 14.5px;\n  &.iconOnly {\n    @apply px-2;\n  }\n}\n\n.secondary,\n.empty {\n  @apply text-textDark font-normal;\n}\n.secondary:not(:disabled):hover,\n.empty:not(:disabled):hover {\n  @apply bg-backgroundLight;\n}\n.secondary:not(:disabled):active,\n.empty:not(:disabled):active {\n  @apply bg-backgroundLightPrimary;\n  color: var(--primary);\n}\n\n.button:disabled {\n  @apply opacity-50 cursor-default pointer-events-none;\n}\n\n.withPadding {\n  @apply pl-2;\n}\n\n.isActive {\n  @apply text-textLink bg-backgroundLightPrimary;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.primary,\n.success,\n.danger,\n.info,\n.warning {\n  color: white;\n  font-weight: 500;\n  background: var(--bg-variant);\n  &:not(:disabled) {\n    &:hover {\n      background: var(--bg-variant-light);\n    }\n    &:active {\n      background: var(--bg-variant-dark);\n    }\n    &.active {\n      background: var(--bg-variant-dark) !important;\n    }\n  }\n  &:focus,\n  &:active {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--bg-variant);\n  }\n}\n\n.secondary {\n  background: var(--bg-variant);\n}\n.empty {\n  background: white;\n  outline: none;\n  &:focus,\n  &:active {\n    outline: none;\n  }\n}\n</style>\n"]}]}