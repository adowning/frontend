{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Status.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Status.vue","mtime":1601935943890},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknCmltcG9ydCB7IFdvcmtvcmRlclN0YXR1c0NvcHksIFdvcmtvcmRlclN0YXR1cyB9IGZyb20gJ0AvdHlwZXMvd29ya29yZGVyJwppbXBvcnQgeyBXb3Jrb3JkZXJTdGF0dXNWYXJpYW50cyB9IGZyb20gJ0AvdXRpbHMvY29sb3JzJwpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcgYXMgKCkgPT4gV29ya29yZGVyU3RhdHVzLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHVwZGF0ZXdvcmtvcmRlcjogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIHNldHVwKHByb3BzKSB7CiAgICBjb25zdCBXb3Jrb3JkZXJTdGF0dXNPcHRpb25zID0gT2JqZWN0LnZhbHVlcyhXb3Jrb3JkZXJTdGF0dXMpLm1hcCgKICAgICAgc3RhdHVzID0+ICh7CiAgICAgICAgdmFsdWU6IHN0YXR1cywKICAgICAgICBsYWJlbDogV29ya29yZGVyU3RhdHVzQ29weVtzdGF0dXNdCiAgICAgIH0pCiAgICApCiAgICBjb25zdCB1cGRhdGV3b3Jrb3JkZXJTdGF0dXMgPSBhc3luYyAoc3RhdHVzOiBXb3Jrb3JkZXJTdGF0dXMpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBwcm9wcy51cGRhdGV3b3Jrb3JkZXIoeyBzdGF0dXMgfSkKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgV29ya29yZGVyU3RhdHVzT3B0aW9ucywKICAgICAgV29ya29yZGVyU3RhdHVzVmFyaWFudHMsCiAgICAgIHVwZGF0ZXdvcmtvcmRlclN0YXR1cwogICAgfQogIH0KfSkK"},{"version":3,"sources":["Status.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Status.vue","sourceRoot":"src/components/Project/Workorder/WorkorderDetails","sourcesContent":["<template>\n  <div>\n    <div class=\"mt-6 mb-1 uppercase text-textMedium text-13 font-bold\">\n      status\n    </div>\n    <j-select\n      searchable\n      variant=\"empty\"\n      :dropdownWidth=\"300\"\n      :withClearValue=\"false\"\n      :options=\"workorderStatusOptions\"\n      :value=\"value\"\n      @change=\"updateworkorderStatus\"\n      customRender\n      customRenderOption\n    >\n      <template v-slot:default=\"{ label }\">\n        <j-button\n          class=\"uppercase text-textMedium text-13\"\n          :variant=\"workorderStatusVariants[value]\"\n        >\n          {{ label }}\n        </j-button>\n      </template>\n      <template v-slot:option=\"{ label }\">\n        <div class=\"flex items-center pr-1 pl-2\">\n          <div class=\"text-15 pr-1 pl-2\">\n            {{ label }}\n          </div>\n        </div>\n      </template>\n    </j-select>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from '@vue/composition-api'\nimport { WorkorderStatusCopy, WorkorderStatus } from '@/types/workorder'\nimport { WorkorderStatusVariants } from '@/utils/colors'\nexport default defineComponent({\n  props: {\n    value: {\n      type: String as () => WorkorderStatus,\n      required: true\n    },\n    updateworkorder: {\n      type: Function,\n      required: true\n    }\n  },\n  setup(props) {\n    const WorkorderStatusOptions = Object.values(WorkorderStatus).map(\n      status => ({\n        value: status,\n        label: WorkorderStatusCopy[status]\n      })\n    )\n    const updateworkorderStatus = async (status: WorkorderStatus) => {\n      try {\n        await props.updateworkorder({ status })\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    return {\n      WorkorderStatusOptions,\n      WorkorderStatusVariants,\n      updateworkorderStatus\n    }\n  }\n})\n</script>\n\n<style></style>\n"]}]}