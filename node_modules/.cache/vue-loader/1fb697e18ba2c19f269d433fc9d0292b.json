{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderSearch/WorkorderSearch.vue?vue&type=style&index=0&id=0101c99a&lang=postcss&scoped=true&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderSearch/WorkorderSearch.vue","mtime":1601935310559},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlY3Rpb25UaXRsZSB7CiAgQGFwcGx5IHRleHQtdGV4dE1lZGl1bSBmb250LWJvbGQgdGV4dC14cyB1cHBlcmNhc2UgcGItMzsKfQo="},{"version":3,"sources":["WorkorderSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA","file":"WorkorderSearch.vue","sourceRoot":"src/components/Project/Workorder/WorkorderSearch","sourcesContent":["<template>\n  <div class=\"px-8 pb-16 pt-6\">\n    <div class=\"relative pr-7 mb-10\">\n      <j-input\n        ref=\"searchInputRef\"\n        class=\"flat text-textMedium\"\n        icon=\"search\"\n        @input=\"handleSearchChange\"\n        :value=\"searchTerm\"\n        :iconSize=\"26\"\n        placeholder=\"Search workorders by summary, description...\"\n      />\n    </div>\n    <div\n      class=\"pt-10 flex flex-col justify-center items-center\"\n      v-if=\"loading && !isSearchTermEmpty\"\n    >\n      <Spinner />\n    </div>\n    <div class=\"fadeIn\" v-else>\n      <div v-if=\"isSearchTermEmpty && recentworkorders.length > 0\">\n        <div class=\"sectionTitle\">Recent workorders</div>\n        <SearchResult\n          v-for=\"workorder in recentworkorders\"\n          :key=\"workorder.id\"\n          :workorder=\"workorder\"\n        />\n      </div>\n      <div v-if=\"!isSearchTermEmpty && matchingworkorders.length > 0\">\n        <div class=\"sectionTitle\">Matching workorders</div>\n        <SearchResult\n          v-for=\"workorder in matchingworkorders\"\n          :key=\"workorder.id\"\n          :workorder=\"workorder\"\n        />\n      </div>\n      <div\n        class=\"pt-10 flex flex-col justify-center items-center\"\n        v-if=\"!isSearchTermEmpty && !loading && matchingworkorders.length === 0\"\n      >\n        <j-icon :size=\"125\" name=\"no-result\"></j-icon>\n        <div class=\"pt-8 font-medium text-xl\">\n          We couldn&apos;t find anything matching your search\n        </div>\n        <div class=\"pt-2 text-15\">Try again with a different term.</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"tsx\">\nimport { defineComponent, ref, computed, onMounted } from '@vue/composition-api'\nimport SearchResult from './SearchResult.vue'\nimport Loader from '@/components/Loader.vue'\nimport { useQuery, useResult } from '@vue/apollo-composable'\nimport { getProjectWorkorders } from '@/graphql/queries/workorder'\nimport { Workorder } from '@/types/workorder'\nimport { getters } from '@/store'\nimport { debounce } from 'throttle-debounce'\nimport { CombinedVueInstance } from 'vue/types/vue'\n// eslint-disable-next-line\nconst sortByNewest = (items: any[] = [], sortField: string) =>\n  items.sort((a, b) => -a[sortField].localeCompare(b[sortField]))\n\nexport default defineComponent({\n  components: {\n    SearchResult,\n    Spinner: Loader\n  },\n  setup() {\n    const isSearchTermEmpty = ref<boolean>(true)\n    const searchTerm = ref<string>('')\n    const searchInputRef = ref<\n      CombinedVueInstance<Vue, object, object, object, object>\n    >(null)\n    const { result, refetch, loading } = useQuery<Workorder[]>(\n      getProjectWorkorders,\n      {\n        searchTerm: searchTerm.value\n      }\n    )\n\n    const project = computed(getters.project)\n\n    const matchingworkorders = useResult(result, [])\n    const recentworkorders = computed(() =>\n      sortByNewest(project.value.workorders, 'createdAt').slice(0, 10)\n    )\n\n    const handleSearchChange = debounce(500, (value: string) => {\n      searchTerm.value = value.trim()\n      isSearchTermEmpty.value = !searchTerm.value\n      if (searchTerm.value) {\n        refetch({ searchTerm: searchTerm.value })\n      }\n    })\n\n    onMounted(() => {\n      if (searchInputRef.value) {\n        const inputEl = searchInputRef.value.$el.querySelector('input')\n        if (inputEl) {\n          inputEl.focus()\n        }\n      }\n    })\n\n    return {\n      matchingworkorders,\n      loading,\n      recentworkorders,\n      isSearchTermEmpty,\n      handleSearchChange,\n      searchTerm,\n      searchInputRef\n    }\n  }\n})\n</script>\n\n<style lang=\"postcss\" scoped>\n.sectionTitle {\n  @apply text-textMedium font-bold text-xs uppercase pb-3;\n}\n</style>\n\n<style lang=\"scss\"></style>\n"]}]}