{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/shared/TextEditor/TextEditor.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/shared/TextEditor/TextEditor.vue","mtime":1601932087349},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnFsIHsKICAucWwtdG9vbGJhciB7CiAgICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDBweCAwcHggIWltcG9ydGFudDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZmUxZTYgIWltcG9ydGFudDsKICAgIGJvcmRlci1ib3R0b206IG5vbmUgIWltcG9ydGFudDsKICB9CiAgLnFsLWNvbnRhaW5lci5xbC1zbm93IHsKICAgIGNvbG9yOiAjMTcyYjRkOwogICAgZm9udC1zaXplOiAxNXB4OwogICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCA0cHggNHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgI2RmZTFlNjsKICAgIGJvcmRlci10b3A6IG5vbmU7CiAgfQp9Ci5xbC1lZGl0b3IgewogIC8vIG1pbi1oZWlnaHQ6IDExMHB4OwogIGZvbnQtZmFtaWx5OiAnQ2lyY3VsYXJTdGQnLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsCiAgICBSb2JvdG8sICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYsICdDaXJjdWxhclN0ZCc7CgogIGgxLAogIGgyLAogIGgzLAogIGg0LAogIGg1LAogIGg2IHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogIH0KICBpbWcsCiAgdmlkZW8gewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIH0KfQouY29udGVudCB7CiAgcGFkZGluZzogMCAhaW1wb3J0YW50OwogIGZvbnQtc2l6ZTogMTVweDsKfQo="},{"version":3,"sources":["TextEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TextEditor.vue","sourceRoot":"src/components/shared/TextEditor","sourcesContent":["<template>\n  <div>\n    <div v-show=\"mode == 'write'\" class=\"ql\">\n      <div ref=\"editorRef\"></div>\n    </div>\n    <div v-if=\"mode == 'read'\" class=\"ql-snow\">\n      <div\n        @click=\"enableWriteMode\"\n        class=\"content ql-editor\"\n        v-html=\"initialValue ? initialValue : 'Add a description'\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref, watch } from '@vue/composition-api'\nimport Quill from 'quill'\nimport { quillConfig } from './editor'\nexport default defineComponent({\n  name: 'j-text-editor',\n  props: {\n    placeholder: {\n      type: String,\n      default: undefined\n    },\n    value: {\n      type: String,\n      default: undefined\n    },\n    defaultValue: {\n      type: String,\n      default: undefined\n    },\n    mode: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, { emit }) {\n    const quill = ref<Quill>(null)\n    const editorRef = ref<HTMLDivElement>(null)\n    const initialValue = ref<string>(props.value || props.defaultValue)\n\n    const initQuill = () => {\n      return new Quill(editorRef.value as HTMLDivElement, {\n        placeholder: props.placeholder,\n        ...quillConfig\n      })\n    }\n\n    const enableWriteMode = () => {\n      emit('changeMode', 'write')\n    }\n\n    const insertValue = (quill: Quill, value: string) => {\n      quill.clipboard.dangerouslyPasteHTML(0, value)\n      quill.blur()\n    }\n\n    const getHTMLValue = () =>\n      (editorRef.value as HTMLDivElement).querySelector('.ql-editor')?.innerHTML\n\n    const handleContentsChange = () => {\n      emit('input', getHTMLValue())\n    }\n\n    watch(\n      () => props.mode,\n      (_, from) => {\n        if (from == 'write') {\n          quill.value?.setText('')\n          insertValue(quill.value as Quill, props.value)\n          initialValue.value = props.value\n        }\n      },\n      {\n        lazy: true\n      }\n    )\n\n    onMounted(() => {\n      quill.value = initQuill()\n      insertValue(quill.value, initialValue.value)\n      quill.value.on('text-change', handleContentsChange)\n      return () => {\n        quill.value?.off('text-change', handleContentsChange)\n        // eslint-disable-next-line\n        quill.value = null as any\n      }\n    })\n    return {\n      editorRef,\n      getHTMLValue,\n      initialValue,\n      enableWriteMode\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.ql {\n  .ql-toolbar {\n    border-radius: 4px 4px 0px 0px !important;\n    border: 1px solid #dfe1e6 !important;\n    border-bottom: none !important;\n  }\n  .ql-container.ql-snow {\n    color: #172b4d;\n    font-size: 15px;\n    border-radius: 0px 0px 4px 4px;\n    border: 1px solid #dfe1e6;\n    border-top: none;\n  }\n}\n.ql-editor {\n  // min-height: 110px;\n  font-family: 'CircularStd', -apple-system, BlinkMacSystemFont, 'Segoe UI',\n    Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif, 'CircularStd';\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: bold;\n  }\n  img,\n  video {\n    display: inline-block;\n  }\n}\n.content {\n  padding: 0 !important;\n  font-size: 15px;\n}\n</style>\n"]}]}