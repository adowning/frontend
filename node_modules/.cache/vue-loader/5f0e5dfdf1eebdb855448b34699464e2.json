{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Title.vue?vue&type=style&index=0&id=1948ed34&lang=postcss&scoped=true&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Title.vue","mtime":1601934218213},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aXRsZSB7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OwogIEBhcHBseSBoLWF1dG8gZm9udC1tZWRpdW0gdGV4dC0yeGwgdGV4dC10ZXh0RGFya2VzdDsKfQo="},{"version":3,"sources":["Title.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA","file":"Title.vue","sourceRoot":"src/components/Project/Workorder/WorkorderDetails","sourcesContent":["<template>\n  <div class=\"w-full inline-block mt-4 -ml-2 h-10\">\n    <j-textarea\n      placeholder=\"Short summary\"\n      class=\"title\"\n      @input=\"e => (title = e)\"\n      @blur=\"updateworkorderDescription\"\n      :value=\"value\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from '@vue/composition-api'\nexport default defineComponent({\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    updateworkorder: {\n      type: Function,\n      required: true\n    }\n  },\n  setup(props) {\n    const isWorking = ref<boolean>(false)\n    const title = ref<HTMLDivElement>(props.value)\n\n    const updateworkorderDescription = async () => {\n      try {\n        isWorking.value = true\n        await props.updateworkorder({ title: title.value })\n        isWorking.value = false\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    return {\n      title,\n      isWorking,\n      updateworkorderDescription\n    }\n  }\n})\n</script>\n\n<style lang=\"postcss\" scoped>\n.title {\n  border-color: transparent !important;\n  @apply h-auto font-medium text-2xl text-textDarkest;\n}\n</style>\n"]}]}