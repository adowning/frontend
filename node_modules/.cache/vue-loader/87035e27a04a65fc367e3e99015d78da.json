{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Type.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Workorder/WorkorderDetails/Type.vue","mtime":1601935886580},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaScKaW1wb3J0IHsgV29ya29yZGVyVHlwZSwgV29ya29yZGVyVHlwZUNvcHkgfSBmcm9tICdAL3R5cGVzL3dvcmtvcmRlcicKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogU3RyaW5nIGFzICgpID0+IFdvcmtvcmRlclR5cGUsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgd29ya29yZGVySWQ6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICB1cGRhdGVXb3Jrb3JkZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBzZXR1cChwcm9wcykgewogICAgY29uc3Qgd29ya29yZGVyVHlwZU9wdGlvbnMgPSBPYmplY3QudmFsdWVzKFdvcmtvcmRlclR5cGUpLm1hcCh0eXBlID0+ICh7CiAgICAgIHZhbHVlOiB0eXBlLAogICAgICBsYWJlbDogV29ya29yZGVyVHlwZUNvcHlbdHlwZV0sCiAgICAgIGljb246IFdvcmtvcmRlclR5cGVDb3B5W3R5cGVdLnRvTG93ZXJDYXNlKCkKICAgIH0pKQogICAgY29uc3QgdXBkYXRlV29ya29yZGVyVHlwZSA9IGFzeW5jICh0eXBlOiBXb3Jrb3JkZXJUeXBlKSA9PiB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgcHJvcHMudXBkYXRlV29ya29yZGVyKHsgdHlwZSB9KQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gewogICAgICB3b3Jrb3JkZXJUeXBlT3B0aW9ucywKICAgICAgdXBkYXRlV29ya29yZGVyVHlwZQogICAgfQogIH0KfSkK"},{"version":3,"sources":["Type.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Type.vue","sourceRoot":"src/components/Project/Workorder/WorkorderDetails","sourcesContent":["<template>\n  <j-select\n    searchable\n    variant=\"empty\"\n    :dropdownWidth=\"150\"\n    :withClearValue=\"false\"\n    :options=\"workorderTypeOptions\"\n    :value=\"value\"\n    @change=\"updateWorkorderType\"\n    customRender\n    customRenderOption\n  >\n    <template v-slot:default=\"{ label, icon }\">\n      <j-button\n        class=\"uppercase text-textMedium text-13\"\n        :iconSize=\"20\"\n        variant=\"empty\"\n        :icon=\"icon\"\n      >\n        {{ `${label}-${workorderId}` }}\n      </j-button>\n    </template>\n    <template v-slot:option=\"{ label, icon }\">\n      <div class=\" pr-1 pl-2 flex items-center\">\n        <j-icon :name=\"icon\" :size=\"20\" class=\"mr-1\"></j-icon>\n\n        <div class=\"text-15 pr-1 pl-2\">\n          {{ label }}\n        </div>\n      </div>\n    </template>\n  </j-select>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from '@vue/composition-api'\nimport { WorkorderType, WorkorderTypeCopy } from '@/types/workorder'\nexport default defineComponent({\n  props: {\n    value: {\n      type: String as () => WorkorderType,\n      required: true\n    },\n    workorderId: {\n      type: [String, Number],\n      required: true\n    },\n    updateWorkorder: {\n      type: Function,\n      required: true\n    }\n  },\n  setup(props) {\n    const workorderTypeOptions = Object.values(WorkorderType).map(type => ({\n      value: type,\n      label: WorkorderTypeCopy[type],\n      icon: WorkorderTypeCopy[type].toLowerCase()\n    }))\n    const updateWorkorderType = async (type: WorkorderType) => {\n      try {\n        await props.updateWorkorder({ type })\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    return {\n      workorderTypeOptions,\n      updateWorkorderType\n    }\n  }\n})\n</script>\n\n<style></style>\n"]}]}