{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/shared/Select/Select.vue?vue&type=style&index=1&id=51db72d5&lang=postcss&scoped=true&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/shared/Select/Select.vue","mtime":1601932087349},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlbGVjdC5ub3JtYWwgewogIEBhcHBseSB3LWZ1bGwgcHgtMiBib3JkZXIgYm9yZGVyLWJvcmRlckxpZ2h0ZXN0IGJnLWJhY2tncm91bmRMaWdodGVzdDsKfQouc2VsZWN0Lm5vcm1hbDpob3ZlciB7CiAgQGFwcGx5IGJnLWJhY2tncm91bmRMaWdodDsKfQouc2VsZWN0Lm5vcm1hbDpmb2N1cyB7CiAgQGFwcGx5IGJvcmRlciBib3JkZXItYm9yZGVySW5wdXRGb2N1cyBiZy13aGl0ZSB0ZXh0LWJvcmRlcklucHV0Rm9jdXM7CiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IGN1cnJlbnRDb2xvcjsKfQoKLnNlbGVjdC5lbXB0eSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9Cg=="},{"version":3,"sources":["Select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Select.vue","sourceRoot":"src/components/shared/Select","sourcesContent":["<template>\n  <div\n    class=\"select\"\n    ref=\"selectRef\"\n    :class=\"[variant]\"\n    @keydown=\"handleFocusedSelectKeydown\"\n  >\n    <div\n      class=\"valueContainer text-textDarkest\"\n      :data-testid=\"name ? `select:${name}` : 'select'\"\n      @click=\"activateDropdown\"\n    >\n      <div class=\"placeholder\" v-if=\"isValueEmpty\">{{ placeholder }}</div>\n\n      <slot\n        v-if=\"!isValueEmpty && !isMulti && customRender\"\n        v-bind=\"getOption(localValue)\"\n      />\n      <template v-else>\n        {{ getOptionLabel(localValue) }}\n      </template>\n\n      <div v-if=\"!isValueEmpty && isMulti\" class=\"valueMulti text-textDarkest\">\n        <div\n          class=\"my-1 mx-1 flex items-center\"\n          v-for=\"optionValue in localValue\"\n          :key=\"optionValue\"\n        >\n          <slot\n            v-if=\"customRender\"\n            v-bind=\"{\n              ...getOption(optionValue),\n              optionValue,\n              remove: removeOptionValue\n            }\"\n          />\n          <div v-else class=\"valueMultiItem text-textDarkest\">\n            <div class=\"valueMultiItemLabel\">\n              {{ getOptionLabel(optionValue) }}\n            </div>\n            <div\n              @click=\"removeOptionValue(optionValue)\"\n              class=\"valueMultiItemClose\"\n            >\n              <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M16.192 6.344L11.949 10.586 7.707 6.344 6.293 7.758 10.535 12 6.293 16.242 7.707 17.656 11.949 13.414 16.192 17.656 17.606 16.242 13.364 12 17.606 7.758z\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"addMore m-1\">\n          <svg\n            class=\"icon\"\n            viewBox=\"0 0 24 24\"\n            focusable=\"false\"\n            role=\"presentation\"\n          >\n            <path\n              d=\"M13 11V3.993A.997.997 0 0 0 12 3c-.556 0-1 .445-1 .993V11H3.993A.997.997 0 0 0 3 12c0 .557.445 1 .993 1H11v7.007c0 .548.448.993 1 .993.556 0 1-.445 1-.993V13h7.007A.997.997 0 0 0 21 12c0-.556-.445-1-.993-1H13z\"\n              fill=\"currentColor\"\n              fill-rule=\"evenodd\"\n            ></path>\n          </svg>\n          <div class=\"font-medium\">Add more</div>\n        </div>\n      </div>\n\n      <j-icon\n        v-if=\"(!isMulti || isValueEmpty) && variant !== 'empty'\"\n        class=\"ml-auto mr-1\"\n        name=\"chevron-down\"\n      ></j-icon>\n    </div>\n\n    <Dropdown\n      v-if=\"isDropdownOpen\"\n      ref=\"dropdownRef\"\n      isValueEmpty\n      :dropdownWidth=\"dropdownWidth\"\n      :searchable=\"searchable\"\n      :searchValue=\"searchValue\"\n      :value=\"localValue\"\n      :deactivateDropdown=\"deactivateDropdown\"\n      :options=\"options\"\n      :isMulti=\"isMulti\"\n      :withClearValue=\"withClearValue\"\n      @change=\"handleChange\"\n      @searchValueChange=\"handleSearchValueChange\"\n    >\n      <template v-slot:option=\"props\">\n        <slot v-if=\"customRenderOption\" name=\"option\" v-bind=\"props\" />\n        <slot v-else v-bind=\"props\" />\n      </template>\n    </Dropdown>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from '@vue/composition-api'\nimport Dropdown from './Dropdown.vue'\nimport { useOutsideClick } from '../../../hooks/useOutsideClick'\n\ninterface Option {\n  label: string\n  value: number | string\n}\n\nexport default defineComponent({\n  name: 'j-select',\n  props: {\n    dropdownWidth: {\n      type: Number,\n      default: undefined\n    },\n    variant: {\n      type: String,\n      default: 'normal'\n    },\n    name: {\n      type: String,\n      default: undefined\n    },\n    customRender: {\n      type: Boolean,\n      default: false\n    },\n    customRenderOption: {\n      type: Boolean,\n      default: false\n    },\n    searchable: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: [Array, String, Number],\n      default: undefined\n    },\n    defaultValue: {\n      type: [String, Array, Number],\n      default: undefined\n    },\n    placeholder: {\n      type: String,\n      default: 'Select'\n    },\n    invalid: {\n      type: Boolean,\n      default: false\n    },\n    options: {\n      type: Array as () => Array<Option>,\n      required: true\n    },\n    isMulti: {\n      type: Boolean,\n      default: false\n    },\n    withClearValue: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    Dropdown\n  },\n  setup(props, { emit, root }) {\n    const selectRef = ref<HTMLDivElement>(null)\n    const dropdownRef = ref<HTMLDivElement>(null)\n    const isDropdownOpen = ref<boolean>(false)\n    const searchValue = ref<string>('')\n    const stateValue = ref(props.defaultValue || (props.isMulti ? [] : null))\n\n    const getOption = (\n      optionValue: string | number | Array<number | string>\n    ) => {\n      return props.options.find(option => option.value === optionValue)\n    }\n\n    const getOptionLabel = (\n      optionValue: string | number | Array<number | string>\n    ) => {\n      return (getOption(optionValue) || { label: '' }).label\n    }\n    const isControlled = computed(() => props.value != undefined)\n\n    const localValue = computed(() =>\n      isControlled.value ? props.value : stateValue.value\n    )\n\n    const preserveValueType = (\n      newValue: string | number | Array<number | string>\n    ) => {\n      const areOptionValuesNumbers = props.options.some(\n        option => typeof option.value === 'number'\n      )\n\n      if (areOptionValuesNumbers) {\n        if (props.isMulti) {\n          return (newValue as [string | number]).map(Number)\n        }\n        if (newValue) {\n          return Number(newValue)\n        }\n      }\n      return newValue\n    }\n\n    const handleChange = (\n      newValue: string | number | Array<number | string>\n    ) => {\n      if (!isControlled.value) {\n        stateValue.value = preserveValueType(newValue)\n      }\n      emit('change', preserveValueType(newValue))\n    }\n\n    const removeOptionValue = (\n      optionValue: string | number | Array<number | string>\n    ) => {\n      handleChange(\n        (localValue.value as [string | number]).filter(\n          val => val !== optionValue\n        )\n      )\n    }\n\n    const isValueEmpty = computed(() =>\n      props.isMulti\n        ? !(localValue.value as [string | number]).length\n        : !getOption(\n            localValue.value as string | number | Array<number | string>\n          )\n    )\n\n    const handleFocusedSelectKeydown = (event: KeyboardEvent) => {\n      if (isDropdownOpen.value) return\n      if (event.keyCode === 13) {\n        event.preventDefault()\n      }\n      if (event.keyCode !== 27 && event.keyCode !== 9 && !event.shiftKey) {\n        isDropdownOpen.value = true\n      }\n    }\n\n    const deactivateDropdown = async () => {\n      isDropdownOpen.value = false\n      searchValue.value = ''\n      await root.$nextTick()\n      selectRef.value && selectRef.value.focus()\n    }\n    const activateDropdown = async () => {\n      isDropdownOpen.value = true\n      await root.$nextTick()\n      selectRef.value && selectRef.value.blur()\n      // eslint-disable-next-line\n      props.searchable && (dropdownRef.value as any).$refs.inputRef.focus()\n    }\n    const handleSearchValueChange = (newValue: string) => {\n      searchValue.value = newValue\n    }\n\n    useOutsideClick(ref(document.body), selectRef, deactivateDropdown)\n\n    return {\n      selectRef,\n      dropdownRef,\n      isDropdownOpen,\n      searchValue,\n      stateValue,\n      getOption,\n      removeOptionValue,\n      getOptionLabel,\n      localValue,\n      isValueEmpty,\n      activateDropdown,\n      deactivateDropdown,\n      handleFocusedSelectKeydown,\n      handleSearchValueChange,\n      handleChange\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.select {\n  position: relative;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background 0.1s;\n  &:focus {\n    outline: none;\n  }\n}\n\n.valueContainer {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 32px;\n}\n.placeholder {\n  color: #8993a4;\n}\n.valueMulti {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  // padding-top: 5px;\n}\n.valueMultiItem {\n  height: 22px;\n  overflow: hidden;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  user-select: none;\n  background: #f0f0f0;\n  font-size: 14px;\n  .valueMultiItemLabel {\n    flex: auto;\n    padding: 0 4px;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    border-right: 1px solid #ddd;\n  }\n  .valueMultiItemClose {\n    border-left: none;\n    overflow: hidden;\n    padding: 0 2px;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    &:hover {\n      background: #ff4757;\n      color: white;\n    }\n    .icon {\n      width: 18px;\n      height: 18px;\n      fill: currentColor;\n    }\n  }\n}\n.addMore {\n  font-size: 12.5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  color: #0052cc;\n  &:hover,\n  &:visited,\n  &:active {\n    color: #0052cc;\n  }\n  &:hover {\n    text-decoration: underline;\n  }\n  .icon {\n    width: 16px;\n    height: 16px;\n    fill: currentColor;\n    margin-right: 2px;\n  }\n}\n</style>\n\n<style lang=\"postcss\" scoped>\n.select.normal {\n  @apply w-full px-2 border border-borderLightest bg-backgroundLightest;\n}\n.select.normal:hover {\n  @apply bg-backgroundLight;\n}\n.select.normal:focus {\n  @apply border border-borderInputFocus bg-white text-borderInputFocus;\n  box-shadow: 0 0 0 1px currentColor;\n}\n\n.select.empty {\n  display: inline-block;\n}\n</style>\n"]}]}