{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Lists/List.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/components/Project/Lists/List.vue","mtime":1601934621303},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRyb3AtcHJldmlldyB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTAsIDE1MCwgMjAwLCAwLjEpOwogIGJvcmRlcjogMXB4IGRhc2hlZCAjYWJjOwogIG1hcmdpbjogNXB4Owp9Ci5jYXJkLWdob3N0IHsKICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xOHMgZWFzZTsKICB0cmFuc2Zvcm06IHJvdGF0ZVooNWRlZyk7Cn0KLmNhcmQtZ2hvc3QtZHJvcCB7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMThzIGVhc2UtaW4tb3V0OwogIHRyYW5zZm9ybTogcm90YXRlWigwZGVnKTsKfQo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components/Project/Lists","sourcesContent":["<template>\n  <div class=\"list\">\n    <div class=\"px-3 pb-4 pt-3 uppercase text-textMedium text-13 truncate\">\n      {{ WorkorderStatusCopy[status] }}\n      <span class=\"lowercase text-13\">{{ formatedWorkordersCount }}</span>\n    </div>\n    <div class=\"h-full px-2\">\n      <Container\n        class=\"h-full\"\n        group-name=\"board\"\n        @drop=\"onDrop\"\n        drag-class=\"card-ghost\"\n        drop-class=\"card-ghost-drop\"\n        :get-child-payload=\"getCardPayload\"\n        :drop-placeholder=\"dropPlaceholderOptions\"\n      >\n        <Draggable\n          v-for=\"(Workorder, index) in filteredListWorkorders\"\n          :key=\"Workorder.id\"\n        >\n          <Workorder :Workorder=\"Workorder\" :index=\"index\" />\n        </Draggable>\n      </Container>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport dayjs from 'dayjs'\nimport { defineComponent, computed } from '@vue/composition-api'\nimport { Container, Draggable } from 'vue-smooth-dnd'\n\nimport WorkorderComponent from '@/components/Project/Workorder/Workorder.vue'\nimport { Filters } from '@/types/filters'\nimport {\n  Workorder,\n  WorkorderStatusCopy,\n  WorkorderStatus\n} from '@/types/workorder'\nimport { getters } from '@/store'\nimport { DropResult, getSortedListWorkorders } from '../../../utils/dnd'\n\nconst filterWorkorders = (\n  projectWorkorders: Array<Workorder>,\n  filters: Filters,\n  currentUserId: string\n) => {\n  const { searchTerm, userIds, myOnly, recent } = filters\n\n  let Workorders = [...projectWorkorders]\n\n  if (searchTerm) {\n    Workorders = Workorders.filter(Workorder =>\n      Workorder.title.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n  }\n  if (userIds.length > 0) {\n    Workorders = Workorders.filter(\n      Workorder =>\n        [Workorder.userIds, userIds].reduce((a, b) =>\n          a.filter(c => b.includes(c))\n        ).length > 0\n    )\n  }\n  if (myOnly && currentUserId) {\n    Workorders = Workorders.filter(Workorder =>\n      Workorder.userIds.includes(currentUserId)\n    )\n  }\n  if (recent) {\n    Workorders = Workorders.filter(Workorder =>\n      dayjs(Workorder.updatedAt).isAfter(dayjs().subtract(3, 'day'))\n    )\n  }\n  return Workorders\n}\n\nexport default defineComponent({\n  props: {\n    status: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    Workorder: WorkorderComponent,\n    Container,\n    Draggable\n  },\n  setup(props, { emit }) {\n    const project = computed(getters.project)\n    const filters = computed(getters.filters)\n    const currentUserId = computed(() => getters.currentUser().id)\n\n    const filteredWorkorders = computed(() =>\n      filterWorkorders(\n        project.value.workorders,\n        filters.value,\n        currentUserId.value\n      )\n    )\n    const filteredListWorkorders = computed(() =>\n      getSortedListWorkorders(filteredWorkorders.value, props.status)\n    )\n\n    const allListWorkorders = computed(() =>\n      getSortedListWorkorders(project.value.workorders, props.status)\n    )\n\n    const formatedWorkordersCount = computed(() => {\n      if (\n        allListWorkorders.value.length !== filteredListWorkorders.value.length\n      ) {\n        return `${filteredListWorkorders.value.length} of ${allListWorkorders.value.length}`\n      }\n      return allListWorkorders.value.length\n    })\n\n    const dropPlaceholderOptions = {\n      className: 'drop-preview',\n      animationDuration: '150',\n      showOnTop: true\n    }\n\n    // eslint-disable-next-line\n    const onDrop = (dropResult: any) => {\n      const arr = Object.values(WorkorderStatus)\n      const to = arr.indexOf(props.status as WorkorderStatus)\n      emit('drop', { ...dropResult, to } as DropResult)\n    }\n    const getCardPayload = (index: number) => {\n      const WorkordersByStatus = getSortedListWorkorders(\n        filteredListWorkorders.value,\n        props.status\n      )\n      return WorkordersByStatus[index]\n    }\n    return {\n      onDrop,\n      getCardPayload,\n      dropPlaceholderOptions,\n      filteredListWorkorders,\n      formatedWorkordersCount,\n      WorkorderStatusCopy\n    }\n  }\n})\n</script>\n\n<style lang=\"postcss\" scoped>\n.list {\n  @apply mr-2 flex flex-col  rounded-sm bg-backgroundLightest flex-shrink-0;\n  width: calc(100% / 4 - 8px);\n  min-height: 400px;\n  min-width: 200px;\n}\n</style>\n\n<style lang=\"scss\">\n.drop-preview {\n  background-color: rgba(150, 150, 200, 0.1);\n  border: 1px dashed #abc;\n  margin: 5px;\n}\n.card-ghost {\n  transition: transform 0.18s ease;\n  transform: rotateZ(5deg);\n}\n.card-ghost-drop {\n  transition: transform 0.18s ease-in-out;\n  transform: rotateZ(0deg);\n}\n</style>\n"]}]}