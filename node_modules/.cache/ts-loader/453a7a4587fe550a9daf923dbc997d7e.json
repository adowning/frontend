{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js!/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js??ref--14-2!/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/utils/dnd.ts","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/utils/dnd.ts","mtime":1601934448097},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvYXNoL0RvY3VtZW50cy9jbG91ZHJ1bi9zZWNvbmQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9ob21lL2FzaC9Eb2N1bWVudHMvY2xvdWRydW4vc2Vjb25kL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmV4cG9ydCB2YXIgbW92ZUl0ZW1XaXRoaW5BcnJheSA9IGZ1bmN0aW9uIG1vdmVJdGVtV2l0aGluQXJyYXkoYXJyLCBpdGVtLCBuZXdJbmRleCkgewogIHZhciBhcnJDbG9uZSA9IF90b0NvbnN1bWFibGVBcnJheShhcnIpOwoKICB2YXIgb2xkSW5kZXggPSBhcnJDbG9uZS5pbmRleE9mKGl0ZW0pOwogIGFyckNsb25lLnNwbGljZShuZXdJbmRleCwgMCwgYXJyQ2xvbmUuc3BsaWNlKG9sZEluZGV4LCAxKVswXSk7CiAgcmV0dXJuIGFyckNsb25lOwp9OwpleHBvcnQgdmFyIGluc2VydEl0ZW1JbnRvQXJyYXkgPSBmdW5jdGlvbiBpbnNlcnRJdGVtSW50b0FycmF5KGFyciwgaXRlbSwgaW5kZXgpIHsKICB2YXIgYXJyQ2xvbmUgPSBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKTsKCiAgYXJyQ2xvbmUuc3BsaWNlKGluZGV4LCAwLCBpdGVtKTsKICByZXR1cm4gYXJyQ2xvbmU7Cn07CmV4cG9ydCB2YXIgdXBkYXRlQXJyYXlJdGVtQnlJZCA9IGZ1bmN0aW9uIHVwZGF0ZUFycmF5SXRlbUJ5SWQoYXJyLCBpdGVtSWQsIGZpZWxkcykgewogIHZhciBhcnJDbG9uZSA9IF90b0NvbnN1bWFibGVBcnJheShhcnIpOwoKICB2YXIgaXRlbSA9IGFyckNsb25lLmZpbmQoZnVuY3Rpb24gKF9yZWYpIHsKICAgIHZhciBpZCA9IF9yZWYuaWQ7CiAgICByZXR1cm4gaWQgPT09IGl0ZW1JZDsKICB9KTsKCiAgaWYgKGl0ZW0pIHsKICAgIHZhciBpdGVtSW5kZXggPSBhcnJDbG9uZS5pbmRleE9mKGl0ZW0pOwogICAgYXJyQ2xvbmUuc3BsaWNlKGl0ZW1JbmRleCwgMSwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKSwgZmllbGRzKSk7CiAgfQoKICByZXR1cm4gYXJyQ2xvbmU7Cn07CmV4cG9ydCB2YXIgaXNQb3NpdGlvbkNoYW5nZWQgPSBmdW5jdGlvbiBpc1Bvc2l0aW9uQ2hhbmdlZChkZXN0aW5hdGlvbiwgc291cmNlKSB7CiAgaWYgKCFkZXN0aW5hdGlvbikgcmV0dXJuIGZhbHNlOwogIHZhciBpc1NhbWVMaXN0ID0gZGVzdGluYXRpb24uZHJvcHBhYmxlSWQgPT09IHNvdXJjZS5kcm9wcGFibGVJZDsKICB2YXIgaXNTYW1lUG9zaXRpb24gPSBkZXN0aW5hdGlvbi5pbmRleCA9PT0gc291cmNlLmluZGV4OwogIHJldHVybiAhaXNTYW1lTGlzdCB8fCAhaXNTYW1lUG9zaXRpb247Cn07CmV4cG9ydCB2YXIgZ2V0U29ydGVkTGlzdFdvcmtvcmRlcnMgPSBmdW5jdGlvbiBnZXRTb3J0ZWRMaXN0V29ya29yZGVycyhXb3Jrb3JkZXJzLCBzdGF0dXMpIHsKICByZXR1cm4gV29ya29yZGVycy5maWx0ZXIoZnVuY3Rpb24gKFdvcmtvcmRlcikgewogICAgcmV0dXJuIFdvcmtvcmRlci5zdGF0dXMgPT09IHN0YXR1czsKICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICByZXR1cm4gYS5saXN0UG9zaXRpb24gLSBiLmxpc3RQb3NpdGlvbjsKICB9KTsKfTsKCnZhciBnZXRBZnRlckRyb3BQcmV2TmV4dFdvcmtvcmRlciA9IGZ1bmN0aW9uIGdldEFmdGVyRHJvcFByZXZOZXh0V29ya29yZGVyKGFsbFdvcmtvcmRlcnMsIGRlc3RpbmF0aW9uLCBzb3VyY2UsIGRyb3BwZWRXb3Jrb3JkZXJJZCkgewogIHZhciBiZWZvcmVEcm9wRGVzdGluYXRpb25Xb3Jrb3JkZXJzID0gZ2V0U29ydGVkTGlzdFdvcmtvcmRlcnMoYWxsV29ya29yZGVycywgZGVzdGluYXRpb24uZHJvcHBhYmxlSWQpOwogIHZhciBkcm9wcGVkV29ya29yZGVyID0gYWxsV29ya29yZGVycy5maW5kKGZ1bmN0aW9uIChXb3Jrb3JkZXIpIHsKICAgIHJldHVybiBXb3Jrb3JkZXIuaWQgPT09IGRyb3BwZWRXb3Jrb3JkZXJJZDsKICB9KTsKICB2YXIgaXNTYW1lTGlzdCA9IGRlc3RpbmF0aW9uLmRyb3BwYWJsZUlkID09PSBzb3VyY2UuZHJvcHBhYmxlSWQ7CiAgdmFyIGFmdGVyRHJvcERlc3RpbmF0aW9uV29ya29yZGVycyA9IGlzU2FtZUxpc3QgPyBtb3ZlSXRlbVdpdGhpbkFycmF5KGJlZm9yZURyb3BEZXN0aW5hdGlvbldvcmtvcmRlcnMsIGRyb3BwZWRXb3Jrb3JkZXIsIGRlc3RpbmF0aW9uLmluZGV4KSA6IGluc2VydEl0ZW1JbnRvQXJyYXkoYmVmb3JlRHJvcERlc3RpbmF0aW9uV29ya29yZGVycywgZHJvcHBlZFdvcmtvcmRlciwgZGVzdGluYXRpb24uaW5kZXgpOwogIHJldHVybiB7CiAgICBwcmV2V29ya29yZGVyOiBhZnRlckRyb3BEZXN0aW5hdGlvbldvcmtvcmRlcnNbZGVzdGluYXRpb24uaW5kZXggLSAxXSwKICAgIG5leHRXb3Jrb3JkZXI6IGFmdGVyRHJvcERlc3RpbmF0aW9uV29ya29yZGVyc1tkZXN0aW5hdGlvbi5pbmRleCArIDFdCiAgfTsKfTsKCmV4cG9ydCB2YXIgY2FsY3VsYXRlV29ya29yZGVyTGlzdFBvc2l0aW9uID0gZnVuY3Rpb24gY2FsY3VsYXRlV29ya29yZGVyTGlzdFBvc2l0aW9uKGFsbFdvcmtvcmRlcnMsIGRlc3RpbmF0aW9uLCBzb3VyY2UsIGRyb3BwZWRXb3Jrb3JkZXJJZCkgewogIHZhciBfZ2V0QWZ0ZXJEcm9wUHJldk5leHQgPSBnZXRBZnRlckRyb3BQcmV2TmV4dFdvcmtvcmRlcihhbGxXb3Jrb3JkZXJzLCBkZXN0aW5hdGlvbiwgc291cmNlLCBkcm9wcGVkV29ya29yZGVySWQpLAogICAgICBwcmV2V29ya29yZGVyID0gX2dldEFmdGVyRHJvcFByZXZOZXh0LnByZXZXb3Jrb3JkZXIsCiAgICAgIG5leHRXb3Jrb3JkZXIgPSBfZ2V0QWZ0ZXJEcm9wUHJldk5leHQubmV4dFdvcmtvcmRlcjsKCiAgdmFyIHBvc2l0aW9uOwoKICBpZiAoIXByZXZXb3Jrb3JkZXIgJiYgIW5leHRXb3Jrb3JkZXIpIHsKICAgIHBvc2l0aW9uID0gMTsKICB9IGVsc2UgaWYgKCFwcmV2V29ya29yZGVyKSB7CiAgICBwb3NpdGlvbiA9IG5leHRXb3Jrb3JkZXIubGlzdFBvc2l0aW9uIC0gMTsKICB9IGVsc2UgaWYgKCFuZXh0V29ya29yZGVyKSB7CiAgICBwb3NpdGlvbiA9IHByZXZXb3Jrb3JkZXIubGlzdFBvc2l0aW9uICsgMTsKICB9IGVsc2UgewogICAgcG9zaXRpb24gPSBwcmV2V29ya29yZGVyLmxpc3RQb3NpdGlvbiArIChuZXh0V29ya29yZGVyLmxpc3RQb3NpdGlvbiAtIHByZXZXb3Jrb3JkZXIubGlzdFBvc2l0aW9uKSAvIDI7CiAgfQoKICByZXR1cm4gcG9zaXRpb247Cn07"},{"version":3,"sources":["/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/utils/dnd.ts"],"names":[],"mappings":"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","sourcesContent":["import { Workorder, WorkorderStatus } from '@/types/workorder'\n\nexport interface DropResult {\n  removedIndex: number | null\n  addedIndex: number | null\n  to: number\n  payload: Workorder\n}\n\nexport interface Target {\n  index: number\n  droppableId: WorkorderStatus\n}\n\nexport const moveItemWithinArray = (\n  arr: Workorder[],\n  item: Workorder,\n  newIndex: number\n) => {\n  const arrClone = [...arr]\n  const oldIndex = arrClone.indexOf(item)\n  arrClone.splice(newIndex, 0, arrClone.splice(oldIndex, 1)[0])\n  return arrClone\n}\n\nexport const insertItemIntoArray = (\n  arr: Workorder[],\n  item: Workorder,\n  index: number\n) => {\n  const arrClone = [...arr]\n  arrClone.splice(index, 0, item)\n  return arrClone\n}\nexport const updateArrayItemById = (\n  arr: Workorder[],\n  itemId: string,\n  fields: Partial<Workorder>\n) => {\n  const arrClone = [...arr]\n  const item = arrClone.find(({ id }) => id === itemId)\n  if (item) {\n    const itemIndex = arrClone.indexOf(item)\n    arrClone.splice(itemIndex, 1, { ...item, ...fields })\n  }\n  return arrClone\n}\n\nexport const isPositionChanged = (destination: Target, source: Target) => {\n  if (!destination) return false\n  const isSameList = destination.droppableId === source.droppableId\n  const isSamePosition = destination.index === source.index\n  return !isSameList || !isSamePosition\n}\n\nexport const getSortedListWorkorders = (\n  Workorders: Workorder[] | readonly Workorder[],\n  status: string\n) =>\n  Workorders.filter(Workorder => Workorder.status === status).sort(\n    (a, b) => a.listPosition - b.listPosition\n  )\n\nconst getAfterDropPrevNextWorkorder = (\n  allWorkorders: Workorder[],\n  destination: Target,\n  source: Target,\n  droppedWorkorderId: string\n) => {\n  const beforeDropDestinationWorkorders = getSortedListWorkorders(\n    allWorkorders,\n    destination.droppableId\n  )\n  const droppedWorkorder = allWorkorders.find(\n    Workorder => Workorder.id === droppedWorkorderId\n  )\n  const isSameList = destination.droppableId === source.droppableId\n\n  const afterDropDestinationWorkorders = isSameList\n    ? moveItemWithinArray(\n        beforeDropDestinationWorkorders,\n        droppedWorkorder as Workorder,\n        destination.index\n      )\n    : insertItemIntoArray(\n        beforeDropDestinationWorkorders,\n        droppedWorkorder as Workorder,\n        destination.index\n      )\n\n  return {\n    prevWorkorder: afterDropDestinationWorkorders[destination.index - 1],\n    nextWorkorder: afterDropDestinationWorkorders[destination.index + 1]\n  }\n}\n\nexport const calculateWorkorderListPosition = (\n  allWorkorders: Workorder[],\n  destination: Target,\n  source: Target,\n  droppedWorkorderId: string\n) => {\n  const { prevWorkorder, nextWorkorder } = getAfterDropPrevNextWorkorder(\n    allWorkorders,\n    destination,\n    source,\n    droppedWorkorderId\n  )\n  let position\n\n  if (!prevWorkorder && !nextWorkorder) {\n    position = 1\n  } else if (!prevWorkorder) {\n    position = nextWorkorder.listPosition - 1\n  } else if (!nextWorkorder) {\n    position = prevWorkorder.listPosition + 1\n  } else {\n    position =\n      prevWorkorder.listPosition +\n      (nextWorkorder.listPosition - prevWorkorder.listPosition) / 2\n  }\n  return position\n}\n"],"sourceRoot":""}]}