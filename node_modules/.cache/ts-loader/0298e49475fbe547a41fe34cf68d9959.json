{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js!/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js??ref--14-2!/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/plugins/toast.ts","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/plugins/toast.ts","mtime":1601932087349},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvYXNoL0RvY3VtZW50cy9jbG91ZHJ1bi9zZWNvbmQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgVG9hc3RpZnkgZnJvbSAndG9hc3RpZnktanMnOwp2YXIgY29tbW9uQ29uZmlnID0gewogIG5ld1dpbmRvdzogdHJ1ZSwKICBjbG9zZTogdHJ1ZSwKICBncmF2aXR5OiAndG9wJywKICBwb3NpdGlvbjogJ3JpZ2h0JywKICBzdG9wT25Gb2N1czogdHJ1ZSwKICBkdXJhdGlvbjogNTAwMAp9OwpleHBvcnQgdmFyIHN1Y2Nlc3NUb2FzdCA9IGZ1bmN0aW9uIHN1Y2Nlc3NUb2FzdChtZXNzYWdlKSB7CiAgcmV0dXJuIFRvYXN0aWZ5KF9vYmplY3RTcHJlYWQoewogICAgdGV4dDogbWVzc2FnZSwKICAgIGJhY2tncm91bmRDb2xvcjogJyMwQjg3NUInCiAgfSwgY29tbW9uQ29uZmlnKSk7Cn07CmV4cG9ydCB2YXIgZXJyb3JUb2FzdCA9IGZ1bmN0aW9uIGVycm9yVG9hc3QobWVzc2FnZSkgewogIHJldHVybiBUb2FzdGlmeShfb2JqZWN0U3ByZWFkKHsKICAgIHRleHQ6IG1lc3NhZ2UsCiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRTEzQzNDJwogIH0sIGNvbW1vbkNvbmZpZykpOwp9Ow=="},{"version":3,"sources":["/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/plugins/toast.ts"],"names":[],"mappings":";AAAA,OAAO,QAAP,MAAqB,aAArB;AAEA,IAAM,YAAY,GAAG;AACnB,EAAA,SAAS,EAAE,IADQ;AAEnB,EAAA,KAAK,EAAE,IAFY;AAGnB,EAAA,OAAO,EAAE,KAHU;AAInB,EAAA,QAAQ,EAAE,OAJS;AAKnB,EAAA,WAAW,EAAE,IALM;AAMnB,EAAA,QAAQ,EAAE;AANS,CAArB;AASA,OAAO,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,OAAD;AAAA,SAC1B,QAAQ;AACN,IAAA,IAAI,EAAE,OADA;AAEN,IAAA,eAAe,EAAE;AAFX,KAGH,YAHG,EADkB;AAAA,CAArB;AAMP,OAAO,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,OAAD;AAAA,SACxB,QAAQ;AACN,IAAA,IAAI,EAAE,OADA;AAEN,IAAA,eAAe,EAAE;AAFX,KAGH,YAHG,EADgB;AAAA,CAAnB","sourcesContent":["import Toastify from 'toastify-js'\n\nconst commonConfig = {\n  newWindow: true,\n  close: true,\n  gravity: 'top',\n  position: 'right',\n  stopOnFocus: true,\n  duration: 5000\n}\n\nexport const successToast = (message: string) =>\n  Toastify({\n    text: message,\n    backgroundColor: '#0B875B',\n    ...commonConfig\n  })\nexport const errorToast = (message: string) =>\n  Toastify({\n    text: message,\n    backgroundColor: '#E13C3C',\n    ...commonConfig\n  })\n"],"sourceRoot":""}]}