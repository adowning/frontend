{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js!/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js??ref--14-2!/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/graphql/client.ts","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/graphql/client.ts","mtime":1601932087349},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvYXNoL0RvY3VtZW50cy9jbG91ZHJ1bi9zZWNvbmQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgeyBBcG9sbG9DbGllbnQgfSBmcm9tICdhcG9sbG8tY2xpZW50JzsKaW1wb3J0IHsgY3JlYXRlSHR0cExpbmsgfSBmcm9tICdhcG9sbG8tbGluay1odHRwJzsKaW1wb3J0IHsgSW5NZW1vcnlDYWNoZSB9IGZyb20gJ2Fwb2xsby1jYWNoZS1pbm1lbW9yeSc7CmltcG9ydCB7IHNldENvbnRleHQgfSBmcm9tICdhcG9sbG8tbGluay1jb250ZXh0JzsKaW1wb3J0IHsgZ2V0U3RvcmVkQXV0aFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoVG9rZW4nOwp2YXIgaHR0cExpbmsgPSBjcmVhdGVIdHRwTGluayh7CiAgdXJpOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvZ3JhcGhxbCcgOiAnaHR0cHM6Ly9qaXJhLWNsb25lLWFwaS5oZXJva3VhcHAuY29tL2dyYXBocWwnCn0pOwp2YXIgYXV0aExpbmsgPSBzZXRDb250ZXh0KGZ1bmN0aW9uIChfLCBfcmVmKSB7CiAgdmFyIGhlYWRlcnMgPSBfcmVmLmhlYWRlcnM7CiAgcmV0dXJuIHsKICAgIGhlYWRlcnM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaGVhZGVycyksIHt9LCB7CiAgICAgIEF1dGhvcml6YXRpb246IGdldFN0b3JlZEF1dGhUb2tlbigpID8gIkJlYXJlciAiLmNvbmNhdChnZXRTdG9yZWRBdXRoVG9rZW4oKSkgOiB1bmRlZmluZWQKICAgIH0pCiAgfTsKfSk7CnZhciBjYWNoZSA9IG5ldyBJbk1lbW9yeUNhY2hlKCk7CmV4cG9ydCB2YXIgYXBvbGxvQ2xpZW50ID0gbmV3IEFwb2xsb0NsaWVudCh7CiAgbGluazogYXV0aExpbmsuY29uY2F0KGh0dHBMaW5rKSwKICBjYWNoZTogY2FjaGUKfSk7"},{"version":3,"sources":["/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/graphql/client.ts"],"names":[],"mappings":";;AAAA,SAAS,YAAT,QAA6B,eAA7B;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,aAAT,QAAqD,uBAArD;AACA,SAAS,UAAT,QAA2B,qBAA3B;AACA,SAAS,kBAAT,QAAmC,mBAAnC;AAEA,IAAM,QAAQ,GAAG,cAAc,CAAC;AAC9B,EAAA,GAAG,EACD,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,aAAzB,GACI,+BADJ,GAEI;AAJwB,CAAD,CAA/B;AAOA,IAAM,QAAQ,GAAG,UAAU,CAAC,UAAC,CAAD,QAAmB;AAAA,MAAb,OAAa,QAAb,OAAa;AAC7C,SAAO;AACL,IAAA,OAAO,kCACF,OADE;AAEL,MAAA,aAAa,EAAE,kBAAkB,sBACnB,kBAAkB,EADC,IAE7B;AAJC;AADF,GAAP;AAQD,CAT0B,CAA3B;AAWA,IAAM,KAAK,GAAG,IAAI,aAAJ,EAAd;AAEA,OAAO,IAAM,YAAY,GAAwC,IAAI,YAAJ,CAC/D;AACE,EAAA,IAAI,EAAE,QAAQ,CAAC,MAAT,CAAgB,QAAhB,CADR;AAEE,EAAA,KAAK,EAAL;AAFF,CAD+D,CAA1D","sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\nimport { getStoredAuthToken } from '@/utils/authToken'\n\nconst httpLink = createHttpLink({\n  uri:\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:5000/graphql'\n      : 'https://jira-clone-api.herokuapp.com/graphql'\n})\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      Authorization: getStoredAuthToken()\n        ? `Bearer ${getStoredAuthToken()}`\n        : undefined\n    }\n  }\n})\n\nconst cache = new InMemoryCache()\n\nexport const apolloClient: ApolloClient<NormalizedCacheObject> = new ApolloClient(\n  {\n    link: authLink.concat(httpLink),\n    cache\n  }\n)\n"],"sourceRoot":""}]}