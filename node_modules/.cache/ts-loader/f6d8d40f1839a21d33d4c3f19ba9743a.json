{"remainingRequest":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js!/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js??ref--14-2!/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/types/project.ts","dependencies":[{"path":"/home/ash/Documents/cloudrun/second/frontend/src/types/project.ts","mtime":1601935166102},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9hc2gvRG9jdW1lbnRzL2Nsb3VkcnVuL3NlY29uZC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9Qcm9qZWN0Q2F0ZWdvcnlDb3B5OwoKZXhwb3J0IHZhciBQcm9qZWN0Q2F0ZWdvcnk7CgooZnVuY3Rpb24gKFByb2plY3RDYXRlZ29yeSkgewogIFByb2plY3RDYXRlZ29yeVsiU09GVFdBUkUiXSA9ICJzb2Z0d2FyZSI7CiAgUHJvamVjdENhdGVnb3J5WyJNQVJLRVRJTkciXSA9ICJtYXJrZXRpbmciOwogIFByb2plY3RDYXRlZ29yeVsiQlVTSU5FU1MiXSA9ICJidXNpbmVzcyI7Cn0pKFByb2plY3RDYXRlZ29yeSB8fCAoUHJvamVjdENhdGVnb3J5ID0ge30pKTsKCmV4cG9ydCB2YXIgUHJvamVjdENhdGVnb3J5Q29weSA9IChfUHJvamVjdENhdGVnb3J5Q29weSA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX1Byb2plY3RDYXRlZ29yeUNvcHksIFByb2plY3RDYXRlZ29yeS5TT0ZUV0FSRSwgJ1NvZnR3YXJlJyksIF9kZWZpbmVQcm9wZXJ0eShfUHJvamVjdENhdGVnb3J5Q29weSwgUHJvamVjdENhdGVnb3J5Lk1BUktFVElORywgJ01hcmtldGluZycpLCBfZGVmaW5lUHJvcGVydHkoX1Byb2plY3RDYXRlZ29yeUNvcHksIFByb2plY3RDYXRlZ29yeS5CVVNJTkVTUywgJ0J1c2luZXNzJyksIF9Qcm9qZWN0Q2F0ZWdvcnlDb3B5KTs="},{"version":3,"sources":["/home/ash/Documents/cloudrun/second/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/ash/Documents/cloudrun/second/frontend/src/types/project.ts"],"names":[],"mappings":";;;;AAEA,OAAA,IAAY,eAAZ;;AAAA,CAAA,UAAY,eAAZ,EAA2B;AACzB,EAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACD,CAJD,EAAY,eAAe,KAAf,eAAe,GAAA,EAAA,CAA3B;;AAkBA,OAAO,IAAM,mBAAmB,qEAC7B,eAAe,CAAC,QADa,EACF,UADE,yCAE7B,eAAe,CAAC,SAFa,EAED,WAFC,yCAG7B,eAAe,CAAC,QAHa,EAGF,UAHE,wBAAzB","sourcesContent":["import { Workorder } from './workorder'\nimport { User } from './user'\nexport enum ProjectCategory {\n  SOFTWARE = 'software',\n  MARKETING = 'marketing',\n  BUSINESS = 'business'\n}\n\nexport interface Project {\n  id: number\n  name: string\n  url: string | null\n  description: string | null\n  category: ProjectCategory\n  createdAt: Date\n  updatedAt: Date\n  workorders: Workorder[]\n  users: User[]\n}\n\nexport const ProjectCategoryCopy = {\n  [ProjectCategory.SOFTWARE]: 'Software',\n  [ProjectCategory.MARKETING]: 'Marketing',\n  [ProjectCategory.BUSINESS]: 'Business'\n}\n\nexport default Project\n"],"sourceRoot":""}]}